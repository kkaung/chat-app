{"ast":null,"code":"import { Color } from 'three';\nconst readVector = (name, defaultValue) => axis => instance => {\n  const value = instance[name];\n  return value ? value[axis] : defaultValue;\n};\nconst readPosition = readVector(\"position\", 0);\nconst readScale = readVector(\"scale\", 1);\nconst readRotation = readVector(\"rotation\", 0);\nconst readers = {\n  x: readPosition(\"x\"),\n  y: readPosition(\"y\"),\n  z: readPosition(\"z\"),\n  scale: readScale(\"x\"),\n  scaleX: readScale(\"x\"),\n  scaleY: readScale(\"y\"),\n  scaleZ: readScale(\"z\"),\n  rotateX: readRotation(\"x\"),\n  rotateY: readRotation(\"y\"),\n  rotateZ: readRotation(\"z\")\n};\nfunction readAnimatableValue(value) {\n  if (value === undefined) {\n    return;\n  } else if (value instanceof Color) {\n    return value.getStyle();\n  } else {\n    return value;\n  }\n}\nfunction readThreeValue(instance, name) {\n  return readers[name] ? readers[name](instance) : readAnimatableValue(instance[name]) || 0;\n}\nexport { readThreeValue };","map":{"version":3,"names":["Color","readVector","name","defaultValue","axis","instance","value","readPosition","readScale","readRotation","readers","x","y","z","scale","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","readAnimatableValue","undefined","getStyle","readThreeValue"],"sources":["/app/node_modules/framer-motion-3d/dist/es/render/utils/read-value.mjs"],"sourcesContent":["import { Color } from 'three';\n\nconst readVector = (name, defaultValue) => (axis) => (instance) => {\n    const value = instance[name];\n    return value ? value[axis] : defaultValue;\n};\nconst readPosition = readVector(\"position\", 0);\nconst readScale = readVector(\"scale\", 1);\nconst readRotation = readVector(\"rotation\", 0);\nconst readers = {\n    x: readPosition(\"x\"),\n    y: readPosition(\"y\"),\n    z: readPosition(\"z\"),\n    scale: readScale(\"x\"),\n    scaleX: readScale(\"x\"),\n    scaleY: readScale(\"y\"),\n    scaleZ: readScale(\"z\"),\n    rotateX: readRotation(\"x\"),\n    rotateY: readRotation(\"y\"),\n    rotateZ: readRotation(\"z\"),\n};\nfunction readAnimatableValue(value) {\n    if (value === undefined) {\n        return;\n    }\n    else if (value instanceof Color) {\n        return value.getStyle();\n    }\n    else {\n        return value;\n    }\n}\nfunction readThreeValue(instance, name) {\n    return readers[name]\n        ? readers[name](instance)\n        : readAnimatableValue(instance[name]) || 0;\n}\n\nexport { readThreeValue };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAE7B,MAAMC,UAAU,GAAG,CAACC,IAAI,EAAEC,YAAY,KAAMC,IAAI,IAAMC,QAAQ,IAAK;EAC/D,MAAMC,KAAK,GAAGD,QAAQ,CAACH,IAAI,CAAC;EAC5B,OAAOI,KAAK,GAAGA,KAAK,CAACF,IAAI,CAAC,GAAGD,YAAY;AAC7C,CAAC;AACD,MAAMI,YAAY,GAAGN,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9C,MAAMO,SAAS,GAAGP,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;AACxC,MAAMQ,YAAY,GAAGR,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9C,MAAMS,OAAO,GAAG;EACZC,CAAC,EAAEJ,YAAY,CAAC,GAAG,CAAC;EACpBK,CAAC,EAAEL,YAAY,CAAC,GAAG,CAAC;EACpBM,CAAC,EAAEN,YAAY,CAAC,GAAG,CAAC;EACpBO,KAAK,EAAEN,SAAS,CAAC,GAAG,CAAC;EACrBO,MAAM,EAAEP,SAAS,CAAC,GAAG,CAAC;EACtBQ,MAAM,EAAER,SAAS,CAAC,GAAG,CAAC;EACtBS,MAAM,EAAET,SAAS,CAAC,GAAG,CAAC;EACtBU,OAAO,EAAET,YAAY,CAAC,GAAG,CAAC;EAC1BU,OAAO,EAAEV,YAAY,CAAC,GAAG,CAAC;EAC1BW,OAAO,EAAEX,YAAY,CAAC,GAAG;AAC7B,CAAC;AACD,SAASY,mBAAmB,CAACf,KAAK,EAAE;EAChC,IAAIA,KAAK,KAAKgB,SAAS,EAAE;IACrB;EACJ,CAAC,MACI,IAAIhB,KAAK,YAAYN,KAAK,EAAE;IAC7B,OAAOM,KAAK,CAACiB,QAAQ,EAAE;EAC3B,CAAC,MACI;IACD,OAAOjB,KAAK;EAChB;AACJ;AACA,SAASkB,cAAc,CAACnB,QAAQ,EAAEH,IAAI,EAAE;EACpC,OAAOQ,OAAO,CAACR,IAAI,CAAC,GACdQ,OAAO,CAACR,IAAI,CAAC,CAACG,QAAQ,CAAC,GACvBgB,mBAAmB,CAAChB,QAAQ,CAACH,IAAI,CAAC,CAAC,IAAI,CAAC;AAClD;AAEA,SAASsB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}