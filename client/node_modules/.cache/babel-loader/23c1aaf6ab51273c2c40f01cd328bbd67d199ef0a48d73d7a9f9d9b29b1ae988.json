{"ast":null,"code":"import { Vector3, Color, Euler } from 'three';\nconst setVector = (name, defaultValue) => i => (instance, value) => {\n  if (instance[name] === undefined) {\n    instance[name] = new Vector3(defaultValue);\n  }\n  const vector = instance[name];\n  vector.setComponent(i, value);\n};\nconst setEuler = (name, defaultValue) => axis => (instance, value) => {\n  if (instance[name] === undefined) {\n    instance[name] = new Euler(defaultValue);\n  }\n  const euler = instance[name];\n  euler[axis] = value;\n};\nconst setColor = name => (instance, value) => {\n  if (instance[name] === undefined) {\n    instance[name] = new Color(value);\n  }\n  instance[name].set(value);\n};\nconst setScale = setVector(\"scale\", 1);\nconst setPosition = setVector(\"position\", 0);\nconst setRotation = setEuler(\"rotation\", 0);\nconst setters = {\n  x: setPosition(0),\n  y: setPosition(1),\n  z: setPosition(2),\n  scale: (instance, value) => {\n    if (instance.scale === undefined) {\n      instance.scale = new Vector3(1);\n    }\n    const scale = instance.scale;\n    scale.set(value, value, value);\n  },\n  scaleX: setScale(0),\n  scaleY: setScale(1),\n  scaleZ: setScale(2),\n  rotateX: setRotation(\"x\"),\n  rotateY: setRotation(\"y\"),\n  rotateZ: setRotation(\"z\"),\n  color: setColor(\"color\"),\n  specular: setColor(\"specular\")\n};\nfunction setThreeValue(instance, key, values) {\n  if (setters[key]) {\n    setters[key](instance, values[key]);\n  } else {\n    if (key === \"opacity\" && !instance.transparent) {\n      instance.transparent = true;\n    }\n    instance[key] = values[key];\n  }\n}\nexport { setThreeValue };","map":{"version":3,"names":["Vector3","Color","Euler","setVector","name","defaultValue","i","instance","value","undefined","vector","setComponent","setEuler","axis","euler","setColor","set","setScale","setPosition","setRotation","setters","x","y","z","scale","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","color","specular","setThreeValue","key","values","transparent"],"sources":["/app/node_modules/framer-motion-3d/dist/es/render/utils/set-value.mjs"],"sourcesContent":["import { Vector3, Color, Euler } from 'three';\n\nconst setVector = (name, defaultValue) => (i) => (instance, value) => {\n    if (instance[name] === undefined) {\n        instance[name] = new Vector3(defaultValue);\n    }\n    const vector = instance[name];\n    vector.setComponent(i, value);\n};\nconst setEuler = (name, defaultValue) => (axis) => (instance, value) => {\n    if (instance[name] === undefined) {\n        instance[name] = new Euler(defaultValue);\n    }\n    const euler = instance[name];\n    euler[axis] = value;\n};\nconst setColor = (name) => (instance, value) => {\n    if (instance[name] === undefined) {\n        instance[name] = new Color(value);\n    }\n    instance[name].set(value);\n};\nconst setScale = setVector(\"scale\", 1);\nconst setPosition = setVector(\"position\", 0);\nconst setRotation = setEuler(\"rotation\", 0);\nconst setters = {\n    x: setPosition(0),\n    y: setPosition(1),\n    z: setPosition(2),\n    scale: (instance, value) => {\n        if (instance.scale === undefined) {\n            instance.scale = new Vector3(1);\n        }\n        const scale = instance.scale;\n        scale.set(value, value, value);\n    },\n    scaleX: setScale(0),\n    scaleY: setScale(1),\n    scaleZ: setScale(2),\n    rotateX: setRotation(\"x\"),\n    rotateY: setRotation(\"y\"),\n    rotateZ: setRotation(\"z\"),\n    color: setColor(\"color\"),\n    specular: setColor(\"specular\"),\n};\nfunction setThreeValue(instance, key, values) {\n    if (setters[key]) {\n        setters[key](instance, values[key]);\n    }\n    else {\n        if (key === \"opacity\" && !instance.transparent) {\n            instance.transparent = true;\n        }\n        instance[key] = values[key];\n    }\n}\n\nexport { setThreeValue };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}