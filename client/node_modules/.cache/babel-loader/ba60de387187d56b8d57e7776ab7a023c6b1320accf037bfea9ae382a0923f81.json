{"ast":null,"code":"var _jsxFileName = \"/app/src/store/Auth/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useReducer, createContext, useContext } from 'react';\nimport { registerUser, loginUser } from './AuthActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLoading: false,\n  isAuthenticated: false,\n  message: null,\n  user: null\n};\nconst AuthContext = /*#__PURE__*/createContext(null);\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'REGISTER_PENDING':\n      {\n        return {\n          ...state,\n          isLoading: true\n        };\n      }\n    case 'REGISTER_SUCCESS':\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isAuthenticated: true,\n          user: action.payload,\n          message: null\n        };\n      }\n    case 'REGISTER_FAILED':\n      {\n        return {\n          ...state,\n          isLoading: false,\n          message: action.payload\n        };\n      }\n    case 'LOGIN_PENDING':\n      {\n        return {\n          ...state,\n          isLoading: true\n        };\n      }\n    case 'LOGIN_SUCCESS':\n      {}\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\nfunction Provider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Provider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Provider;\nfunction useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { Provider, useAuth, registerUser, loginUser };\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["useReducer","createContext","useContext","registerUser","loginUser","initialState","isLoading","isAuthenticated","message","user","AuthContext","reducer","state","action","type","payload","Error","Provider","children","dispatch","value","useAuth"],"sources":["/app/src/store/Auth/AuthContext.tsx"],"sourcesContent":["import { useReducer, createContext, ReactNode, useContext } from 'react';\nimport { registerUser, loginUser } from './AuthActions';\nimport type { User } from '../../type';\n\ntype Action =\n    | { type: 'REGISTER_PENDING' }\n    | {\n          payload: any;\n          type: 'REGISTER_SUCCESS';\n      }\n    | {\n          type: 'REGISTER_FAILED';\n          payload: string;\n      }\n    | { type: 'LOGIN_PENDING' }\n    | { type: 'LOGIN_SUCCESS'; payload: any }\n    | { type: 'LOGIN_FAILED'; payload: string };\n\nexport type Dispatch = (action: Action) => void;\ntype State = {\n    isLoading: boolean;\n    isAuthenticated: boolean;\n    message: string | null;\n    user: null | User;\n};\ntype AuthProviderProps = { children: ReactNode };\n\nconst initialState = {\n    isLoading: false,\n    isAuthenticated: false,\n    message: null,\n    user: null,\n};\n\nconst AuthContext = createContext<{ state: State; dispatch: Dispatch } | null>(\n    null\n);\n\nfunction reducer(state: State, action: Action) {\n    switch (action.type) {\n        case 'REGISTER_PENDING': {\n            return { ...state, isLoading: true };\n        }\n        case 'REGISTER_SUCCESS': {\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: true,\n                user: action.payload,\n                message: null,\n            };\n        }\n        case 'REGISTER_FAILED': {\n            return {\n                ...state,\n                isLoading: false,\n                message: action.payload,\n            };\n        }\n        case 'LOGIN_PENDING': {\n            return { ...state, isLoading: true };\n        }\n        case 'LOGIN_SUCCESS': { \n            \n        }\n        default: {\n            throw new Error(`Unhandled action type: ${action.type}`);\n        }\n    }\n}\n\nfunction Provider({ children }: AuthProviderProps) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const value = { state, dispatch };\n    return (\n        <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n    );\n}\n\nfunction useAuth() {\n    return useContext(AuthContext) as { state: State; dispatch: Dispatch };\n}\n\nexport { Provider, useAuth, registerUser, loginUser };\n"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAaC,UAAU,QAAQ,OAAO;AACxE,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AAAC;AA0BxD,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,KAAK;EAChBC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,gBAAGT,aAAa,CAC7B,IAAI,CACP;AAED,SAASU,OAAO,CAACC,KAAY,EAAEC,MAAc,EAAE;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,kBAAkB;MAAE;QACrB,OAAO;UAAE,GAAGF,KAAK;UAAEN,SAAS,EAAE;QAAK,CAAC;MACxC;IACA,KAAK,kBAAkB;MAAE;QACrB,OAAO;UACH,GAAGM,KAAK;UACRN,SAAS,EAAE,KAAK;UAChBC,eAAe,EAAE,IAAI;UACrBE,IAAI,EAAEI,MAAM,CAACE,OAAO;UACpBP,OAAO,EAAE;QACb,CAAC;MACL;IACA,KAAK,iBAAiB;MAAE;QACpB,OAAO;UACH,GAAGI,KAAK;UACRN,SAAS,EAAE,KAAK;UAChBE,OAAO,EAAEK,MAAM,CAACE;QACpB,CAAC;MACL;IACA,KAAK,eAAe;MAAE;QAClB,OAAO;UAAE,GAAGH,KAAK;UAAEN,SAAS,EAAE;QAAK,CAAC;MACxC;IACA,KAAK,eAAe;MAAE,CAEtB;IACA;MAAS;QACL,MAAM,IAAIU,KAAK,CAAE,0BAAyBH,MAAM,CAACC,IAAK,EAAC,CAAC;MAC5D;EAAC;AAET;AAEA,SAASG,QAAQ,OAAkC;EAAA;EAAA,IAAjC;IAAEC;EAA4B,CAAC;EAC7C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGnB,UAAU,CAACW,OAAO,EAAEN,YAAY,CAAC;EAE3D,MAAMe,KAAK,GAAG;IAAER,KAAK;IAAEO;EAAS,CAAC;EACjC,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,KAAM;IAAA,UAAEF;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAE7E;AAAC,GAPQD,QAAQ;AAAA,KAARA,QAAQ;AASjB,SAASI,OAAO,GAAG;EAAA;EACf,OAAOnB,UAAU,CAACQ,WAAW,CAAC;AAClC;AAAC,IAFQW,OAAO;AAIhB,SAASJ,QAAQ,EAAEI,OAAO,EAAElB,YAAY,EAAEC,SAAS;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}