{"ast":null,"code":"import api from '../../utilities/api';\nasync function registerUser(dispatch, inputs) {\n  dispatch({\n    type: 'REGISTER_PENDING'\n  });\n  try {\n    const res = await api.post('/auth/register', inputs);\n    dispatch({\n      type: 'REGISTER_SUCCESS',\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'REGISTER_FAILED',\n      payload: err.response.data.message\n    });\n  }\n}\nasync function loginUser(dispatch, inputs) {\n  dispatch({\n    type: 'LOGIN_PENDING'\n  });\n  try {\n    const res = await api.post('/auth/login', inputs);\n    const token = res.data;\n    console.log(token);\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'LOGIN_FAILED',\n      payload: err.response.data.message\n    });\n  }\n}\nexport { registerUser, loginUser };","map":{"version":3,"names":["api","registerUser","dispatch","inputs","type","res","post","payload","data","err","response","message","loginUser","token","console","log"],"sources":["/app/src/store/Auth/AuthActions.ts"],"sourcesContent":["import { AxiosResponse } from 'axios';\nimport { RegisterUser, LoginUser } from '../../type';\nimport api from '../../utilities/api';\nimport { Dispatch } from './AuthContext';\n\nasync function registerUser(dispatch: Dispatch, inputs: RegisterUser) {\n    dispatch({ type: 'REGISTER_PENDING' });\n    try {\n        const res = await api.post('/auth/register', inputs);\n        dispatch({ type: 'REGISTER_SUCCESS', payload: res.data });\n    } catch (err: any) {\n        dispatch({\n            type: 'REGISTER_FAILED',\n            payload: err.response.data.message as string,\n        });\n    }\n}\n\nasync function loginUser(dispatch: Dispatch, inputs: LoginUser) {\n    dispatch({ type: 'LOGIN_PENDING' });\n\n    try {\n        const res = await api.post('/auth/login', inputs);\n        const token = res.data;\n        console.log(token);\n        dispatch({ type: 'LOGIN_SUCCESS', payload: res.data });\n    } catch (err: any) {\n        dispatch({\n            type: 'LOGIN_FAILED',\n            payload: err.response.data.message as string,\n        });\n    }\n}\n\nexport { registerUser, loginUser };\n"],"mappings":"AAEA,OAAOA,GAAG,MAAM,qBAAqB;AAGrC,eAAeC,YAAY,CAACC,QAAkB,EAAEC,MAAoB,EAAE;EAClED,QAAQ,CAAC;IAAEE,IAAI,EAAE;EAAmB,CAAC,CAAC;EACtC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAEH,MAAM,CAAC;IACpDD,QAAQ,CAAC;MAAEE,IAAI,EAAE,kBAAkB;MAAEG,OAAO,EAAEF,GAAG,CAACG;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,GAAQ,EAAE;IACfP,QAAQ,CAAC;MACLE,IAAI,EAAE,iBAAiB;MACvBG,OAAO,EAAEE,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG;IAC/B,CAAC,CAAC;EACN;AACJ;AAEA,eAAeC,SAAS,CAACV,QAAkB,EAAEC,MAAiB,EAAE;EAC5DD,QAAQ,CAAC;IAAEE,IAAI,EAAE;EAAgB,CAAC,CAAC;EAEnC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAEH,MAAM,CAAC;IACjD,MAAMU,KAAK,GAAGR,GAAG,CAACG,IAAI;IACtBM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBX,QAAQ,CAAC;MAAEE,IAAI,EAAE,eAAe;MAAEG,OAAO,EAAEF,GAAG,CAACG;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOC,GAAQ,EAAE;IACfP,QAAQ,CAAC;MACLE,IAAI,EAAE,cAAc;MACpBG,OAAO,EAAEE,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG;IAC/B,CAAC,CAAC;EACN;AACJ;AAEA,SAASV,YAAY,EAAEW,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}