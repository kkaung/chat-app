{"ast":null,"code":"import { __rest } from 'tslib';\nimport { VisualElement, checkTargetForNewValues, createBox } from 'framer-motion';\nimport { setThreeValue } from './utils/set-value.mjs';\nimport { readThreeValue } from './utils/read-value.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-value.mjs';\nconst createRenderState = () => ({});\nclass ThreeVisualElement extends VisualElement {\n  constructor() {\n    super(...arguments);\n    this.type = \"three\";\n  }\n  readValueFromInstance(instance, key) {\n    return readThreeValue(instance, key);\n  }\n  getBaseTargetFromProps() {\n    return undefined;\n  }\n  sortInstanceNodePosition(a, b) {\n    return a.id - b.id;\n  }\n  makeTargetAnimatableFromInstance(_a) {\n    var target = __rest(_a, [\"transition\"]);\n    checkTargetForNewValues(this, target, {});\n    return target;\n  }\n  removeValueFromRenderState() {}\n  measureInstanceViewportBox() {\n    return createBox();\n  }\n  scrapeMotionValuesFromProps(props) {\n    return scrapeMotionValuesFromProps(props);\n  }\n  build(state, latestValues) {\n    for (const key in latestValues) {\n      state[key] = latestValues[key];\n    }\n  }\n  renderInstance(instance, renderState) {\n    for (const key in renderState) {\n      setThreeValue(instance, key, renderState);\n    }\n  }\n}\nconst createVisualElement = (_, options) => new ThreeVisualElement(options, {});\nexport { ThreeVisualElement, createRenderState, createVisualElement };","map":{"version":3,"names":["__rest","VisualElement","checkTargetForNewValues","createBox","setThreeValue","readThreeValue","scrapeMotionValuesFromProps","createRenderState","ThreeVisualElement","constructor","arguments","type","readValueFromInstance","instance","key","getBaseTargetFromProps","undefined","sortInstanceNodePosition","a","b","id","makeTargetAnimatableFromInstance","_a","target","removeValueFromRenderState","measureInstanceViewportBox","props","build","state","latestValues","renderInstance","renderState","createVisualElement","_","options"],"sources":["/app/node_modules/framer-motion-3d/dist/es/render/create-visual-element.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { VisualElement, checkTargetForNewValues, createBox } from 'framer-motion';\nimport { setThreeValue } from './utils/set-value.mjs';\nimport { readThreeValue } from './utils/read-value.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-value.mjs';\n\nconst createRenderState = () => ({});\nclass ThreeVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"three\";\n    }\n    readValueFromInstance(instance, key) {\n        return readThreeValue(instance, key);\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    sortInstanceNodePosition(a, b) {\n        return a.id - b.id;\n    }\n    makeTargetAnimatableFromInstance(_a) {\n        var target = __rest(_a, [\"transition\"]);\n        checkTargetForNewValues(this, target, {});\n        return target;\n    }\n    removeValueFromRenderState() { }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(state, latestValues) {\n        for (const key in latestValues) {\n            state[key] = latestValues[key];\n        }\n    }\n    renderInstance(instance, renderState) {\n        for (const key in renderState) {\n            setThreeValue(instance, key, renderState);\n        }\n    }\n}\nconst createVisualElement = (_, options) => new ThreeVisualElement(options, {});\n\nexport { ThreeVisualElement, createRenderState, createVisualElement };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,aAAa,EAAEC,uBAAuB,EAAEC,SAAS,QAAQ,eAAe;AACjF,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,2BAA2B,QAAQ,iCAAiC;AAE7E,MAAMC,iBAAiB,GAAG,OAAO,CAAC,CAAC,CAAC;AACpC,MAAMC,kBAAkB,SAASP,aAAa,CAAC;EAC3CQ,WAAW,GAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,IAAI,GAAG,OAAO;EACvB;EACAC,qBAAqB,CAACC,QAAQ,EAAEC,GAAG,EAAE;IACjC,OAAOT,cAAc,CAACQ,QAAQ,EAAEC,GAAG,CAAC;EACxC;EACAC,sBAAsB,GAAG;IACrB,OAAOC,SAAS;EACpB;EACAC,wBAAwB,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC3B,OAAOD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE;EACtB;EACAC,gCAAgC,CAACC,EAAE,EAAE;IACjC,IAAIC,MAAM,GAAGvB,MAAM,CAACsB,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;IACvCpB,uBAAuB,CAAC,IAAI,EAAEqB,MAAM,EAAE,CAAC,CAAC,CAAC;IACzC,OAAOA,MAAM;EACjB;EACAC,0BAA0B,GAAG,CAAE;EAC/BC,0BAA0B,GAAG;IACzB,OAAOtB,SAAS,EAAE;EACtB;EACAG,2BAA2B,CAACoB,KAAK,EAAE;IAC/B,OAAOpB,2BAA2B,CAACoB,KAAK,CAAC;EAC7C;EACAC,KAAK,CAACC,KAAK,EAAEC,YAAY,EAAE;IACvB,KAAK,MAAMf,GAAG,IAAIe,YAAY,EAAE;MAC5BD,KAAK,CAACd,GAAG,CAAC,GAAGe,YAAY,CAACf,GAAG,CAAC;IAClC;EACJ;EACAgB,cAAc,CAACjB,QAAQ,EAAEkB,WAAW,EAAE;IAClC,KAAK,MAAMjB,GAAG,IAAIiB,WAAW,EAAE;MAC3B3B,aAAa,CAACS,QAAQ,EAAEC,GAAG,EAAEiB,WAAW,CAAC;IAC7C;EACJ;AACJ;AACA,MAAMC,mBAAmB,GAAG,CAACC,CAAC,EAAEC,OAAO,KAAK,IAAI1B,kBAAkB,CAAC0B,OAAO,EAAE,CAAC,CAAC,CAAC;AAE/E,SAAS1B,kBAAkB,EAAED,iBAAiB,EAAEyB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}